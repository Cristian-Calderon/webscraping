{% extends "base-objetos.html.twig" %}

{% block title %}Lista de Objetos{% endblock %}

{% block content %}

<div class="container mt-5">
    <h1 class="text-center">Lista de Objetos</h1>
    <button class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#addObjetoModal">‚ûï Agregar
        Objeto</button>
    <div class="row mt-4" id="objetos-container"></div>
</div>

<!-- Modal para agregar objeto -->
<div class="modal fade" id="addObjetoModal" tabindex="-1" aria-labelledby="addObjetoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addObjetoModalLabel">Agregar Nuevo Objeto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="objetoForm">
                    <div class="mb-3">
                        <label for="objetoNombre" class="form-label">Nombre del Objeto</label>
                        <input type="text" class="form-control" id="objetoNombre" required>
                    </div>
                    <div class="mb-3">
                        <label for="objetoImagen" class="form-label">URL de la Imagen</label>
                        <input type="text" class="form-control" id="objetoImagen" required>
                    </div>
                    <div class="mb-3">
                        <label for="objetoCosto" class="form-label">Costo</label>
                        <input type="text" class="form-control" id="objetoCosto" required>
                    </div>
                    <div class="mb-3">
                        <label for="objetoDescripcion" class="form-label">Descripci√≥n</label>
                        <textarea class="form-control" id="objetoDescripcion" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="agregarObjeto()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para editar objeto -->
<div class="modal fade" id="editObjetoModal" tabindex="-1" aria-labelledby="editObjetoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editObjetoModalLabel">Editar Objeto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editObjetoForm">
                    <input type="hidden" id="editObjetoId">
                    <div class="mb-3">
                        <label for="editObjetoNombre" class="form-label">Nombre del Objeto</label>
                        <input type="text" class="form-control" id="editObjetoNombre" required>
                    </div>
                    <div class="mb-3">
                        <label for="editObjetoImagen" class="form-label">URL de la Imagen</label>
                        <input type="text" class="form-control" id="editObjetoImagen" required>
                    </div>
                    <div class="mb-3">
                        <label for="editObjetoCosto" class="form-label">Costo</label>
                        <input type="text" class="form-control" id="editObjetoCosto" required>
                    </div>
                    <div class="mb-3">
                        <label for="editObjetoDescripcion" class="form-label">Descripci√≥n</label>
                        <textarea class="form-control" id="editObjetoDescripcion" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="guardarEdicionObjeto()">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>



<script>
    document.addEventListener("DOMContentLoaded", async function () {
        cargarObjetos();
    });

    async function cargarObjetos() {
        try {
            const response = await fetch("/api/api.php?resource=objetos");
            const objetos = await response.json();
            const container = document.getElementById("objetos-container");
            container.innerHTML = "";

            objetos.forEach(objeto => {
                const objetoCard = `
                <div class="col-md-3">
                    <div class="card bg-secondary text-white mb-3">
                        <a href="/detalle_objeto?id=${objeto.id_item}">
                            <img src="${objeto.Imagen}" class="card-img-top" alt="${objeto.Nombre}">
                        </a>
                        <div class="card-body text-center">
                            <h5 class="card-title">${objeto.Nombre}</h5>
                            <p><strong>Costo:</strong> ${objeto.Costo}</p>
                            <a href="/detalle_objeto?id=${objeto.id_item}" class="btn btn-primary">Ver Detalles</a>
                            <button class="btn btn-warning mt-2" onclick="editarObjeto(${objeto.id_item}, '${objeto.Nombre}', '${objeto.Imagen}', '${objeto.Costo}', '${objeto.Descripcion}')">‚úèÔ∏è Editar</button>
                            <button class="btn btn-danger mt-2" onclick="eliminarObjeto(${objeto.id_item})">üóëÔ∏è Eliminar</button>
                        </div>
                    </div>
                </div>`;
                container.innerHTML += objetoCard;
            });

        } catch (error) {
            console.error("Error al cargar objetos:", error);
        }
    }


    function agregarObjeto() {
        let nombre = document.getElementById("objetoNombre").value;
        let imagen = document.getElementById("objetoImagen").value;
        let costo = document.getElementById("objetoCosto").value;
        let descripcion = document.getElementById("objetoDescripcion").value;

        if (nombre && imagen && costo && descripcion) {
            fetch("/api/api.php?resource=objetos", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ Nombre: nombre, Imagen: imagen, Costo: costo, Descripcion: descripcion })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Objeto agregado correctamente");
                        document.getElementById("objetoForm").reset();
                        let modal = bootstrap.Modal.getInstance(document.getElementById('addObjetoModal'));
                        if (modal) modal.hide();
                        cargarObjetos();
                    } else {
                        alert("Error al agregar objeto: " + data.error);
                    }
                })
                .catch(error => console.error("Error al agregar objeto:", error));
        } else {
            alert("Todos los campos son obligatorios");
        }
    }


    function editarObjeto(id, nombre, imagen, costo, descripcion) {
    console.log("Datos recibidos para edici√≥n:", { id, nombre, imagen, costo, descripcion }); // Debugging

    document.getElementById("editObjetoId").value = id;
    document.getElementById("editObjetoNombre").value = nombre;
    document.getElementById("editObjetoImagen").value = imagen;
    document.getElementById("editObjetoCosto").value = costo;
    document.getElementById("editObjetoDescripcion").value = descripcion || ""; // Evita undefined

    let editModal = new bootstrap.Modal(document.getElementById('editObjetoModal'));
    editModal.show();
}




    function guardarEdicionObjeto() {
        let id = document.getElementById("editObjetoId").value;
        let nombre = document.getElementById("editObjetoNombre").value;
        let imagen = document.getElementById("editObjetoImagen").value;
        let costo = document.getElementById("editObjetoCosto").value;
        let descripcion = document.getElementById("editObjetoDescripcion").value;

        fetch("/api/api.php?resource=objetos", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Authorization": "Bearer " + getCookie("auth_token") // Asegurar autenticaci√≥n
            },
            body: JSON.stringify({ id, Nombre: nombre, Imagen: imagen, Costo: costo, Descripcion: descripcion })
        }).then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Objeto actualizado correctamente");
                    let editModal = bootstrap.Modal.getInstance(document.getElementById('editObjetoModal'));
                    editModal.hide();
                    cargarObjetos();
                } else {
                    alert("Error al actualizar objeto: " + data.error);
                }
            }).catch(error => console.error("Error al actualizar objeto:", error));
    }


    function eliminarObjeto(id) {
    if (!confirm("¬øEst√°s seguro de que deseas eliminar este objeto?")) {
        return;
    }

    fetch(`/api/api.php?resource=objetos&id=${id}`, {
        method: 'DELETE',
        headers: {
            "Authorization": "Bearer " + getCookie("auth_token"), // Para autenticaci√≥n
            "Content-Type": "application/json"
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert("‚úÖ Objeto eliminado correctamente");
            cargarObjetos(); // Recargar la lista de objetos
        } else {
            alert("‚ùå Error al eliminar: " + data.error);
        }
    })
    .catch(error => console.error("‚ùå Error en la eliminaci√≥n:", error));
}


    // Funci√≥n para obtener el valor de una cookie
    function getCookie(name) {
        let cookieArr = document.cookie.split(";");
        for (let i = 0; i < cookieArr.length; i++) {
            let cookiePair = cookieArr[i].split("=");
            if (name.trim() === cookiePair[0].trim()) {
                return decodeURIComponent(cookiePair[1]);
            }
        }
        return null;
    }


</script>

{% endblock %}