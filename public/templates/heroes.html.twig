{% extends "base.html.twig" %}

{% block title %}Lista de H√©roes{% endblock %}

{% block content %}

<div class="container mt-5">
    <h1 class="text-center text-white">Lista de H√©roes</h1>
    
    <!-- Bot√≥n para crear un nuevo h√©roe -->
    <a href="/crear_heroe" class="btn btn-success mb-3">‚ûï Crear H√©roe</a>
    
    <!-- Barra de b√∫squeda -->
    <div class="input-group mb-3">
        <input type="text" class="form-control" id="search-heroes" placeholder="Buscar h√©roe...">
        <button class="btn btn-outline-secondary" type="button" onclick="cargarHeroes()">üîç Buscar</button>
    </div>

    <div class="row mt-4 justify-content-center" id="heroes-container"></div>
</div>

<style>
    /* Fondo con imagen */
    body {
        background-image: url('https://cdn.akamai.steamstatic.com/apps/dota2/images/dota_react/backgrounds/greyfade.jpg');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        color: white;
    }

    /* Estilos para el hover */
    .hero-card {
        position: relative;
        overflow: hidden;
        cursor: pointer;
        transition: transform 0.3s ease-in-out;
        margin-bottom: 30px; /* Espacio entre las filas */
    }

    .hero-card:hover {
        transform: scale(1.09); /* Efecto de zoom leve */
    }

    .hero-card img {
        width: 100%;
        height: auto;
        transition: opacity 0.3s ease-in-out;
        border-radius: 8px; /* Bordes redondeados */
    }

    .hero-card:hover img {
        opacity: 0.7; /* Oscurece la imagen al pasar el mouse */
    }

    /* Nombre del h√©roe en el hover */
    .hero-name {
        position: absolute;
        bottom: -50px;
        left: 0;
        width: 100%;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        text-align: center;
        padding: 10px 0;
        font-size: 1.2rem;
        font-weight: bold;
        text-transform: uppercase;
        transition: bottom 0.1s ease-in-out;
        border-bottom-left-radius: 8px;
        border-bottom-right-radius: 8px;
    }

    .hero-card:hover .hero-name {
        bottom: 0; /* Hace que el nombre aparezca desde abajo */
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", async function () {
        cargarHeroes();
    });

    async function cargarHeroes() {
        try {
            const response = await fetch("/api/api.php?resource=heroes");
            const heroes = await response.json();
            mostrarHeroes(heroes);
        } catch (error) {
            console.error("Error al cargar h√©roes:", error);
        }
    }

    function mostrarHeroes(heroes) {
        const container = document.getElementById("heroes-container");
        container.innerHTML = "";

        heroes.forEach(heroe => {
            const heroCard = `
                <div class="col-md-3 hero-card text-center" data-nombre="${heroe.nombre.toLowerCase()}">
                    <a href="/detalle_heroe?id=${heroe.id_heroe}">
                        <img src="${heroe.link_img}" alt="${heroe.nombre}">
                        <div class="hero-name">${heroe.nombre}</div>
                    </a>
                </div>`;
            container.innerHTML += heroCard;
        });
    }

    document.getElementById("search-heroes").addEventListener("input", function () {
        const searchTerm = this.value.toLowerCase();
        document.querySelectorAll(".hero-card").forEach(card => {
            const nombre = card.getAttribute("data-nombre");
            if (nombre.includes(searchTerm)) {
                card.style.display = "block";
            } else {
                card.style.display = "none";
            }
        });
    });
</script>

{% endblock %}
