{% extends "base.html.twig" %}

{% block title %}Detalles del Héroe{% endblock %}

{% block content %}
<div class="container mt-5">
    <h1 id="hero-name" class="text-center display-3 text-white text-uppercase"></h1>
    
    <div class="row">
        <div class="col-md-4">
            <img id="hero-image" class="img-fluid rounded shadow-lg" alt="Imagen del Héroe">
        </div>
        <div class="col-md-8">
            <p id="hero-description" class="text-light"></p>
        </div>
    </div>

    <h3 class="mt-4 text-white">Habilidades</h3>
    <!-- Nuevo contenedor para el slider de habilidades -->
    <div class="abilities-slider-container">
        <div class="swiper abilities-slider">
            <div class="swiper-wrapper" id="hero-abilities">
                <!-- Las habilidades se cargarán aquí dinámicamente -->
            </div>
            <!-- Controles de navegación -->
            <div class="swiper-button-next"></div>
            <div class="swiper-button-prev"></div>
            <!-- Paginación -->
            <div class="swiper-pagination"></div>
        </div>
    </div>

    <h3 class="mt-4 text-white">Perfil del Héroe</h3>
    <div class="row">
        <div class="col-md-6">
            <table class="table table-dark table-bordered mt-3">
                <tbody>
                    <tr><th>Popularidad</th><td id="popularidad"></td></tr>
                    <tr><th>Porcentaje de Victoria</th><td id="porcentaje_victoria"></td></tr>
                    <tr><th>Resultado</th><td id="resultado"></td></tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-6">
            <canvas id="heroChart" style="max-width: 100%; height: 400px;"></canvas>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-3">
            <h4 class="text-white">Atributos</h4>
            <ul class="list-group">
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/hero_strength.png" alt="Fuerza" class="icon"><span id="fuerza"></span>
                </li>
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/hero_agility.png" alt="Agilidad" class="icon"> <span id="agilidad"></span>
                </li>
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/hero_intelligence.png" alt="Inteligencia" class="icon">  <span id="inteligencia"></span>
                </li>
            </ul>
        </div>
        <div class="col-md-3">
            <h4 class="text-white">Ataque</h4>
            <ul class="list-group">
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/icon_damage.png" alt="Daño" class="icon"><span id="damage"></span>
                </li>
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/icon_attack_time.png" alt="Tiempo de Ataque Base" class="icon">  <span id="tiempo_ataque_base"></span>
                </li>
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/icon_turn_rate.png" alt="Punto de Ataque" class="icon">  <span id="punto_ataque"></span>
                </li>
            </ul>
        </div>
        <div class="col-md-3">
            <h4 class="text-white">Defensa</h4>
            <ul class="list-group">
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/icon_armor.png" alt="Armadura" class="icon">  <span id="armadura"></span>
                </li>
            </ul>
        </div>
        <div class="col-md-3">
            <h4 class="text-white">Movilidad</h4>
            <ul class="list-group">
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/icon_movement_speed.png" alt="Velocidad de Movimiento" class="icon"> <span id="velocidad_movimiento"></span>
                </li>
                <li class="list-group-item bg-dark text-white">
                    <img src="../assets/icons/icon_vision.png" alt="Rango de Visión" class="icon">  <span id="rango_vision"></span>
                </li>
            </ul>
        </div>
    </div>
</div>

<style>
    /* Fondo */
    body {
        background-image: url('https://cdn.akamai.steamstatic.com/apps/dota2/images/dota_react/backgrounds/greyfade.jpg');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        color: white;
    }

    /* Contenedor del slider */
    .abilities-slider-container {
        padding: 20px 40px;
        margin-bottom: 30px;
    }

    /* Estilo para el slider */
    .abilities-slider {
        width: 100%;
        height: 400px; /* Altura fija para el slider */
        margin: 0 auto;
    }

    /* Tarjeta de habilidad */
    .ability-card {
        background: rgba(0, 0, 0, 0.85);
        border-radius: 10px;
        overflow: hidden;
        color: white;
        text-align: center;
        padding: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        height: 100%;
        box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.2);
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

    .ability-card img {
        width: 90px;
        height: 90px;
        object-fit: contain;
        margin-bottom: 15px;
    }

    .ability-card h5 {
        font-size: 1.2rem;
        margin-top: 10px;
        margin-bottom: 15px;
    }

    .ability-card p {
        font-size: 0.9rem;
        padding: 10px;
        text-align: justify;
        overflow-y: auto;
        max-height: 180px; /* Altura máxima para la descripción */
    }

    /* Animación Hover */
    .ability-card:hover {
        transform: scale(1.02);
        box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.5);
    }

    /* Personalización de los botones de navegación */
    .swiper-button-next, .swiper-button-prev {
        color: #fff;
        background: rgba(0, 0, 0, 0.5);
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .swiper-button-next:after, .swiper-button-prev:after {
        font-size: 18px;
    }

    /* Personalización de la paginación */
    .swiper-pagination-bullet {
        background: #fff;
        opacity: 0.5;
    }

    .swiper-pagination-bullet-active {
        background: #fff;
        opacity: 1;
    }

    .icon {
        width: 24px;
        height: 24px;
        margin-right: 10px;
    }
</style>

<!-- Incluir Swiper CSS y JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const urlParams = new URLSearchParams(window.location.search);
        const heroId = urlParams.get("id");

        if (!heroId) {
            alert("Héroe no encontrado");
            window.location.href = "/heroes";
            return;
        }

        try {
            const response = await fetch(`/api/api.php?resource=heroes&id=${heroId}`);
            const data = await response.json();

            if (data.error) {
                alert(data.error);
                window.location.href = "/heroes";
                return;
            }

            document.getElementById("hero-name").innerText = data.nombre;
            document.getElementById("hero-image").src = data.link_img;
            document.getElementById("hero-description").innerText = data.descripcion || "Sin descripción.";

            // Mostrar habilidades en el slider
            const abilitiesContainer = document.getElementById("hero-abilities");
            abilitiesContainer.innerHTML = "";
            
            if (data.habilidades && data.habilidades.length > 0) {
                data.habilidades.forEach(habilidad => {
                    const slide = document.createElement('div');
                    slide.className = 'swiper-slide';
                    slide.innerHTML = `
                        <div class="ability-card">
                            <img src="${habilidad.imagen}" alt="${habilidad.nombre_habilidad}">
                            <h5>${habilidad.nombre_habilidad}</h5>
                            <p>${habilidad.descripcion}</p>
                        </div>`;
                    abilitiesContainer.appendChild(slide);
                });
                
                // Inicializar el Swiper después de cargar las habilidades
                initSwiper();
            } else {
                const emptySlide = document.createElement('div');
                emptySlide.className = 'swiper-slide';
                emptySlide.innerHTML = `
                    <div class="ability-card">
                        <p>No hay habilidades registradas.</p>
                    </div>`;
                abilitiesContainer.appendChild(emptySlide);
                initSwiper();
            }

            // Perfil del Héroe
            document.getElementById("popularidad").innerText = data.perfil.popularidad || "N/A";
            document.getElementById("porcentaje_victoria").innerText = data.perfil.porcentaje_victoria || "N/A";
            document.getElementById("resultado").innerText = data.perfil.resultado || "N/A";
            document.getElementById("fuerza").innerText = data.perfil.fuerza || "N/A";
            document.getElementById("agilidad").innerText = data.perfil.agilidad || "N/A";
            document.getElementById("inteligencia").innerText = data.perfil.inteligencia || "N/A";
            document.getElementById("damage").innerText = data.perfil.damage || "N/A";
            document.getElementById("tiempo_ataque_base").innerText = data.perfil.tiempo_ataque_base || "N/A";
            document.getElementById("punto_ataque").innerText = data.perfil.punto_ataque || "N/A";
            document.getElementById("armadura").innerText = data.perfil.armadura || "N/A";
            document.getElementById("velocidad_movimiento").innerText = data.perfil.velocidad_movimiento || "N/A";
            document.getElementById("rango_vision").innerText = data.perfil.rango_vision || "N/A";

            // Asignar valores numéricos a los resultados
            const resultadoValor = data.perfil.resultado === 'won' ? 25 : (data.perfil.resultado === 'lost' ? 40 : 0);

            // Crear gráfica de Chart.js
            const ctx = document.getElementById('heroChart').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Popularidad', 'Porcentaje de Victoria', 'Resultado'],
                    datasets: [{
                        data: [
                            parseFloat(data.perfil.popularidad) || 0,
                            parseFloat(data.perfil.porcentaje_victoria) || 0,
                            resultadoValor
                        ],
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
                        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });

        } catch (error) {
            console.error("Error al cargar el héroe:", error);
        }
    });

    // Función para inicializar el Swiper
    function initSwiper() {
        new Swiper('.abilities-slider', {
            slidesPerView: 1,
            spaceBetween: 30,
            loop: false,
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            // Configuración responsive
            breakpoints: {
                // Cuando la ventana tenga >= 768px de ancho
                768: {
                    slidesPerView: 2,
                    spaceBetween: 20
                },
                // Cuando la ventana tenga >= 992px de ancho
                992: {
                    slidesPerView: 3,
                    spaceBetween: 30
                }
            }
        });
    }
</script>
{% endblock %}