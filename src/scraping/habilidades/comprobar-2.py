import csv

# Ruta del archivo CSV
input_file = "dota_heroes_abilities_o.csv"

# ParÃ¡metros esperados
COLUMNAS_ESPERADAS = 6

# Listas para almacenar errores encontrados
errores_columnas = []
errores_comillas = []
errores_imagenes = []
errores_campos_vacios = []

# VerificaciÃ³n del CSV
with open(input_file, "r", encoding="utf-8") as infile:
    reader = csv.reader(infile, delimiter=",", quotechar='"')
    header = next(reader)  # Saltar la cabecera

    for i, row in enumerate(reader, start=2):  # Comienza desde la fila 2 por la cabecera
        # Comprobar nÃºmero de columnas
        if len(row) != COLUMNAS_ESPERADAS:
            errores_columnas.append((i, row))

        # Comprobar si las comillas estÃ¡n desbalanceadas
        if row.count('"') % 2 != 0:
            errores_comillas.append((i, row))

        # Verificar si la columna "Imagen" estÃ¡ vacÃ­a
        if len(row) == COLUMNAS_ESPERADAS and not row[-1].strip():
            errores_imagenes.append((i, row))

        # Verificar si hay campos vacÃ­os en columnas clave
        columnas_clave = [0, 1, 2, 3]  # ID, HÃ©roe, Nombre de Habilidad
        if any(not row[idx].strip() for idx in columnas_clave):
            errores_campos_vacios.append((i, row))

# Resultado del anÃ¡lisis
print("âœ… VerificaciÃ³n completa del archivo CSV")
print(f"ðŸš¨ Filas con nÃºmero incorrecto de columnas: {len(errores_columnas)}")
print(f"ðŸš¨ Filas con comillas desbalanceadas: {len(errores_comillas)}")
print(f"ðŸš¨ Filas con la columna 'Imagen' vacÃ­a: {len(errores_imagenes)}")
print(f"ðŸš¨ Filas con campos vacÃ­os en columnas clave: {len(errores_campos_vacios)}")

# Mostrar ejemplos de errores
if errores_columnas:
    print("\nðŸ”Ž Ejemplo de error en nÃºmero de columnas:")
    for error in errores_columnas[:5]:
        print(f"Fila {error[0]}: {error[1]}")

if errores_comillas:
    print("\nðŸ”Ž Ejemplo de error en comillas desbalanceadas:")
    for error in errores_comillas[:5]:
        print(f"Fila {error[0]}: {error[1]}")

if errores_imagenes:
    print("\nðŸ”Ž Ejemplo de error en imÃ¡genes vacÃ­as:")
    for error in errores_imagenes[:5]:
        print(f"Fila {error[0]}: {error[1]}")

if errores_campos_vacios:
    print("\nðŸ”Ž Ejemplo de error en campos vacÃ­os:")
    for error in errores_campos_vacios[:5]:
        print(f"Fila {error[0]}: {error[1]}")
